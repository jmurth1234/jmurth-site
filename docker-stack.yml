version: '3.8'

services:
  nextjs-app:
    image: jmurth-site:${TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        max_attempts: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nextjs.rule=Host(`jmurth.co.uk`)"
        - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
        - "traefik.http.routers.nextjs.service=nextjs"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/jmurth-site
      - PORT=3000
    networks:
      - app-network
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  traefik:
    image: traefik:v3.3
    command:
      - "--providers.swarm=true"
      - "--providers.swarm.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik"
      - "--providers.file.watch=true"
    ports:
      - "3333:3333"
      - "3334:3334"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    networks:
      - app-network

networks:
  app-network:
    driver: overlay

volumes:
  mongodb_data:
    driver: local 